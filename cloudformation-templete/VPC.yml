AWSTemplateFormatVersion: '2010-09-09'
Description: VPC template
# Input Parameters
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Parameters:
          - SystemName
          - EnvType
Parameters:
  SystemName:
    Description: Please type the SystemName.
    Type: String
    Default: Sample
  EnvType:
    Description: Select Environment Type.
    Type: String
    Default: prd
    AllowedValues:
      - stg
      - prd
  CidrBlock:
    Description: Please type the CidrBlock.
    Type: String
    Default: 10.0.0.0/16
Resources:
#  VPC
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Sub ${CidrBlock}
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${EnvType}-vpc

# InternetGateway Create
  InternetGateway: 
    Type: "AWS::EC2::InternetGateway"
    Properties: 
      Tags: 
        - Key: Name
          Value: !Sub "${SystemName}-igw"

# IGW Attach
  InternetGatewayAttachment: 
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

#  Subnet
  PublicSubnet01:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: ap-northeast-1a
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt VPC.CidrBlock, 1, 8 ]]
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${EnvType}-Publicsubnet01

  PublicSubnet02:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: ap-northeast-1c
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt VPC.CidrBlock, 2, 8 ]]
      Tags:
        - Key: Name
          Value: !Sub ${SystemName}-${EnvType}-Publicsubnet02

  PrivateSubnet01: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      AvailabilityZone: "ap-northeast-1a"
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt VPC.CidrBlock, 3, 8 ]]
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub ${SystemName}-${EnvType}-privatesubnet01

  PrivateSubnet02: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      AvailabilityZone: "ap-northeast-1c"
      CidrBlock: !Select [ 3, !Cidr [ !GetAtt VPC.CidrBlock, 4, 8 ]]
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub ${SystemName}-${EnvType}-privatesubnet02

#  RouteTable
  PublicRouteTableA: 
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub "${SystemName}-public-route-a"

  PublicRouteTableC: 
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub "${SystemName}-public-route-c"

  PrivateRouteTableA: 
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub "${SystemName}-private-route-a"

  PrivateRouteTableC: 
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub "${SystemName}-private-route-c"

# Routing
  PublicRouteA: 
    Type: "AWS::EC2::Route"
    Properties: 
      RouteTableId: !Ref PublicRouteTableA 
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  PublicRouteC: 
    Type: "AWS::EC2::Route"
    Properties: 
      RouteTableId: !Ref PublicRouteTableC 
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway 

# RouteTable Associate
  PublicSubnetARouteTableAssociation: 
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: !Ref PublicSubnet01
      RouteTableId: !Ref PublicRouteTableA

  PublicSubnetCRouteTableAssociation: 
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: !Ref PublicSubnet02
      RouteTableId: !Ref PublicRouteTableC

  PrivateSubnetARouteTableAssociation: 
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: !Ref PrivateSubnet01
      RouteTableId: !Ref PrivateRouteTableA 
 
  PrivateSubnetCRouteTableAssociation: 
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: !Ref PrivateSubnet02
      RouteTableId: !Ref PrivateRouteTableC

# Output
Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: VPC
  PublicSubnet01:
    Value: !Ref PublicSubnet01
    Export:
      Name: PublicSubnet01
  PublicSubnet02:
    Value: !Ref PublicSubnet02
    Export:
      Name: PublicSubnet02
  PrivateSubnet01:
    Value: !Ref PrivateSubnet01
    Export:
      Name: PrivateSubnet01
  PrivateSubnet02:
    Value: !Ref PrivateSubnet02
    Export:
      Name: PrivateSubnet02
